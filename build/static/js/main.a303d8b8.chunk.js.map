{"version":3,"sources":["App.js","api/api.js","components/Login/Login.js","components/Register/Register.js","components/Header/Header.js","components/MovieImage/MovieImage.js","components/Profile/MovieList.js","components/Profile/Profile.js","components/PrivateRoute/PrivateRoute.js","Routes.js","reportWebVitals.js","index.js"],"names":["App","className","fetchApi","endPoint","method","token","body","a","url","headers","Authorization","fetch","JSON","stringify","response","json","Login","props","onChangeName","event","setState","name","target","value","validate","onChangeEmail","email","onChangePassword","password","onsubmit","state","then","userdata","errors","window","sessionStorage","setItem","updateUserData","userid","catch","err","console","log","errorList","this","map","error","Fragment","isloggedIn","to","onChange","type","id","onClick","React","Component","Register","Header","MovieImage","urls","index","src","alt","key","MovieList","list","title","onClickFn","buttonText","movie","_id","rating","imagesUrl","Profile","addToWish","bind","deleteFromWish","movies","wishlist","result","message","joined","concat","filter","item","PrivateRoute","component","rest","Routes","getItem","user","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a303d8b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Welcome to Winky interview</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const fetchApi = async (endPoint,method,token,body) =>{\r\n\tlet url = `https://intervieapi.ts.r.appspot.com/${endPoint}`\r\n\tlet headers = {'Content-type':'application/json'};\r\n\tif(token) \r\n\t\theaders.Authorization = token;\r\n\tlet response =  !body?\r\n\t\tawait fetch(url,{\r\n\t\t\tmethod:method,\r\n\t\t\theaders:headers\r\n\t\t})\r\n\t\t:\r\n\t\tawait fetch(url,{\r\n\t\t\tmethod:method,\r\n\t\t\theaders:headers,\r\n\t\t\tbody:JSON.stringify(body)\r\n\t\t})\r\n\t\treturn await response.json();\r\n\r\n\r\n} \r\n\r\n","import React from 'react';\r\nimport './Login.css'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {fetchApi} from '../../api/api';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n            errors:[]\r\n        }\r\n    }\r\n\r\n    onChangeName = (event) => {\r\n        this.setState({ name: event.target.value }, () => {\r\n            this.validate();\r\n        })\r\n    }\r\n    onChangeEmail = (event) => {\r\n        this.setState({ email: event.target.value }, () => {\r\n            this.validate();\r\n        })\r\n        \r\n    }\r\n    onChangePassword = (event) => {\r\n        this.setState({ password: event.target.value }, () => {\r\n            this.validate();\r\n        })\r\n        \r\n    }\r\n    onsubmit = () => {\r\n        const { name, email, password } = this.state;\r\n        if (!(!email || !password || !name)){\r\n            const body = {name,email,password};\r\n            fetchApi('login','POST',null,body)\r\n            .then(userdata => {\r\n                if(userdata && userdata.token){\r\n                    this.setState({errors:[]})\r\n                    window.sessionStorage.setItem('token',userdata.token);\r\n                    this.props.updateUserData(userdata.userid,userdata.token)\r\n                }\r\n                else\r\n                    this.setState({errors:userdata})\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })         \r\n        }\r\n        else\r\n            this.setState({ errors: ['*All fields required'] })\r\n\r\n    }\r\n\r\n    validate = () => {\r\n        const { email, password, name } = this.state;\r\n        if (!email || !password || !name){\r\n            this.setState({ errors: ['*All fields required'] })\r\n            return false;\r\n        }\r\n        this.setState({ errors: [] })\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n    const errorList = this.state.errors.map(error => \r\n                        <p className=\"error\">{error}</p>)\r\n        return (\r\n        <React.Fragment>\r\n        {this.props.isloggedIn?\r\n            <Redirect to=\"profile\"/>\r\n            :\r\n            <div className=\"form-container\">\r\n                <h2>Login Form</h2>\r\n                <span>\r\n                    <label>Name:</label>\r\n                    <input onChange={this.onChangeName}  type=\"text\" id=\"nameField\"/>                   \r\n                </span>\r\n                <span>\r\n                    <label>Email:</label>\r\n                    <input onChange={this.onChangeEmail}  type=\"text\" id=\"emailField\"/>                   \r\n                </span>\r\n                <span>\r\n                    <label>Password:</label>\r\n                    <input onChange={this.onChangePassword}  type=\"password\" id=\"passField\"/>                   \r\n                </span>\r\n                {errorList}\r\n                <button className=\"submit\" onClick={this.onsubmit}>Login</button>\r\n\r\n            </div>\r\n        }\r\n        </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport '../Login/Login.css'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {fetchApi} from '../../api/api';\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n            errors:[]\r\n        }\r\n    }\r\n\r\n    onChangeName = (event) => {\r\n        this.setState({ name: event.target.value }, () => {\r\n            this.validate();\r\n        })\r\n    }\r\n    onChangeEmail = (event) => {\r\n        this.setState({ email: event.target.value }, () => {\r\n            this.validate();\r\n        })\r\n        \r\n    }\r\n    onChangePassword = (event) => {\r\n        this.setState({ password: event.target.value }, () => {\r\n            this.validate();\r\n        })\r\n        \r\n    }\r\n    onsubmit = () => {\r\n        const { name, email, password } = this.state;\r\n        if (!(!email || !password || !name)){\r\n            const body = {name,email,password};           \r\n            fetchApi('register','POST',null,body)\r\n            .then(userdata => {\r\n                if(userdata && userdata.token){\r\n                    this.setState({errors:[]})\r\n                    window.sessionStorage.setItem('token',userdata.token);\r\n                    this.props.updateUserData(userdata.userid,userdata.token)\r\n\r\n                }\r\n                else{\r\n                    this.setState({errors:userdata})\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })            \r\n        }\r\n        else\r\n            this.setState({ errors: ['*All fields required'] })\r\n\r\n    }\r\n\r\n    validate = () => {\r\n        const { email, password, name } = this.state;\r\n        if (!email || !password || !name)\r\n            this.setState({ errors: ['*All fields required'] })\r\n        else\r\n            this.setState({ errors: [] })\r\n    }\r\n\r\n    render() {\r\n    const errorList = this.state.errors.map(error => \r\n                        <p className=\"error\">{error}</p>)\r\n        return (\r\n        <React.Fragment>\r\n        {this.props.isloggedIn?\r\n            <Redirect to=\"profile\"/>\r\n            :\r\n            <div className=\"form-container\">\r\n                <h2>Registration Form</h2>\r\n                <span>\r\n                    <label>Name:</label>\r\n                    <input onChange={this.onChangeName}  type=\"text\" id=\"nameField\"/>                   \r\n                </span>\r\n                <span>\r\n                    <label>Email:</label>\r\n                    <input onChange={this.onChangeEmail}  type=\"text\" id=\"emailField\"/>                   \r\n                </span>\r\n                <span>\r\n                    <label>Password:</label>\r\n                    <input onChange={this.onChangePassword}  type=\"password\" id=\"passField\"/>                   \r\n                </span>\r\n                {errorList}\r\n                \r\n                <button className=\"submit\" onClick={this.onsubmit}>Register</button>\r\n\r\n            </div>\r\n        }\r\n        </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './Header.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header({isloggedIn}) {\r\n  return (\r\n    <div className=\"Header\">\r\n    \t{!isloggedIn && \r\n    \t\t<li><Link to=\"/login\">Login</Link></li>\r\n    \t}\r\n    \t{!isloggedIn && \r\n    \t\t<li><Link to=\"/register\">Register</Link></li>\r\n    \t}        \t\r\n    \t\r\n\r\n        {isloggedIn && <li><Link to=\"/profile\">Profile</Link></li>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n\r\nconst MovieImage = ({urls}) => {\r\n  return (\r\n            <div className=\"image-cont\">\r\n            {\r\n                urls.map( (url,index) => {\r\n\r\n                    return(\r\n\t\t\t\t\t\t<img src={url} alt=\"movie\" key={`${url}-${index}`}/>                 \r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n  );\r\n}\r\n\r\nexport default MovieImage;\r\n","import React from 'react';\r\nimport MovieImage from '../MovieImage/MovieImage';\r\n\r\n\r\nconst MovieList = ({list,title,onClickFn,buttonText}) => {\r\n\r\n\r\n  return (\r\n            <div className=\"movie-cont\">\r\n                <h2>{title}</h2>\r\n            {\r\n                list.map( (movie) => {\r\n                    return(\r\n                        <div className=\"movie\" key={movie._id}>\r\n                            <p className=\"movie-name\">{movie.title}</p>\r\n                            <p>Rating: {movie.rating} / 5 </p>\r\n                            <MovieImage urls={movie.imagesUrl} />\r\n\r\n                                <button onClick={()=>onClickFn(movie)}\r\n                                className=\"add-button\">\r\n                                    {buttonText}\r\n                                </button>\r\n                        </div>                  \r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport './Profile.css'\r\nimport MovieImage from '../MovieImage/MovieImage';\r\nimport MovieList from './MovieList';\r\nimport {fetchApi} from '../../api/api';\r\n\r\nclass Profile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addToWish = this.addToWish.bind(this);\r\n        this.deleteFromWish = this.deleteFromWish.bind(this)\r\n        this.state = {\r\n            movies: [],\r\n            wishlist: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        fetchApi('profile','GET',this.props.token,null)\r\n        .then(result => {\r\n                if(result && result.movies)\r\n                this.setState({movies:result.movies,wishlist:result.wishlist});\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    addToWish(movie){\r\n        const token = this.props.token\r\n        fetchApi('profile','POST',token,{title:movie.title})\r\n        .then(message => {\r\n            if(message === \"succeed\"){\r\n                const joined = this.state.wishlist.concat(movie);\r\n                this.setState({wishlist:joined})                \r\n            }\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })        \r\n        \r\n    }\r\n\r\n    deleteFromWish(movie){\r\n        const token = this.props.token\r\n        fetchApi('profile','DELETE',token,{title:movie.title})\r\n        .then(message => {\r\n            if(message === \"succeed\"){\r\n                const list = this.state.wishlist.filter(item => item._id !== movie._id);\r\n                this.setState({wishlist:list})                \r\n            }\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })         \r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        const {movies,wishlist} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n            <MovieList list={movies} title=\"Recommended Movies\"\r\n            onClickFn={this.addToWish} buttonText=\"Add\" />\r\n            <MovieList list={wishlist} title=\"Wishlist\"\r\n            onClickFn={this.deleteFromWish} buttonText=\"Remove\" />                     \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\n\r\nconst PrivateRoute = ({component:Component,isloggedIn:isloggedIn,...rest}) =>{\r\n\treturn (\r\n\t<Route {...rest}  >\r\n\t{ isloggedIn &&  <Component {...rest}  /> }\r\n\t</Route>\r\n\r\n\t)\r\n\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nimport App from './App';\r\nimport Login from './components/Login/Login';\r\nimport Register from './components/Register/Register';\r\nimport Header from './components/Header/Header';\r\nimport Profile from './components/Profile/Profile';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\nimport {fetchApi} from './api/api';\r\n\r\nclass Routes extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.updateUserData = this.updateUserData.bind(this);\r\n    this.state = {\r\n      isloggedIn:false,\r\n      userid:'',\r\n      token:null\r\n    }\r\n\r\n  }\r\n   componentDidMount(){\r\n      const token = window.sessionStorage.getItem('token')\r\n      if(token)\r\n        fetchApi('login','GET',token,null)\r\n        .then(user=>{\r\n            this.updateUserData(user.userid,token)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n  updateUserData(userid,token){\r\n    if(userid && token){\r\n      this.setState({isloggedIn:true,userid:userid,token:token})\r\n    }\r\n    else\r\n      this.setState({isloggedIn:false,userid:'',token:null})\r\n  };\r\n\r\n  render(){\r\n    return (\r\n   \r\n      <Router>\r\n\r\n          <Header isloggedIn={this.state.isloggedIn} />\r\n          {/* A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. */}\r\n          <Switch>\r\n\r\n            <PrivateRoute path='/profile' component={Profile} \r\n                      isloggedIn={this.state.isloggedIn} token={this.state.token}/>\r\n\r\n            <Route exact path='/login'>\r\n                <Login \r\n                  updateUserData={this.updateUserData} \r\n                  isloggedIn={this.state.isloggedIn}\r\n                />\r\n            </Route>\r\n            <Route exact path='/register'>\r\n                <Register \r\n                  updateUserData={this.updateUserData} \r\n                  isloggedIn={this.state.isloggedIn}\r\n                />\r\n            </Route>   \r\n            <Route exact path=\"/\">\r\n              <App />\r\n            </Route>\r\n          </Switch>\r\n      </Router>\r\n    );    \r\n  }\r\n\r\n}\r\n\r\nexport default Routes;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}